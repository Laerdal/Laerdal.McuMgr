trigger:
  branches:
    include:
      - '*'

pool:
  name: Azure Pipelines
  vmImage: 'macOS-12'

variables:
  - group: shared-variables  # needed for the github access token which is used to create new releases in github

resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/develop

jobs:
  - job: Build
    displayName: Build Agent

    steps:
      - checkout: self
        clean: true
        fetchTags: false
        fetchDepth: 0
        persistCredentials: True

      - task: Bash@3
        displayName: Install Build Tools for 'Laerdal.McuMgr.Bindings'
        inputs:
          targetType: inline
          script: >-
            # for macos13
            # wget      https://github.com/macports/macports-base/releases/download/v2.8.1/MacPorts-2.8.1-13-Ventura.pkg
            # sudo      installer    -verbose    -target /    -pkg MacPorts-2.8.1-13-Ventura.pkg
            
            # for macos12
            # wget   https://github.com/macports/macports-base/releases/download/v2.8.1/MacPorts-2.8.1-12-Monterey.pkg
            # sudo   installer    -verbose    -target /    -pkg MacPorts-2.8.1-12-Monterey.pkg
            
            # sudo    /opt/local/bin/port   install mono
            # sudo  tar -xjf   /opt/local/var/macports/software/mono/mono-*.tbz2  -C /opt/local/var/macports/software/mono/
            # sudo   sh -c   "echo   '\nexport PATH=\"/opt/local/var/macports/software/mono/opt/local/bin:\$PATH\"\n'   >> ~/.bash_profile"
            
            # echo    "--------------------------------------------------"
            # cat   ~/.bash_profile
            # echo    "--------------------------------------------------"
            
            # source  ~/.bash_profile
            # ------------------- #
            
            brew   install   --cask   objectivesharpie

            brew   install   gradle

            brew   install   java11
            
            # this is handled by the build system
            # echo  -e   '\norg.gradle.java.home=/usr/local/opt/openjdk@11/'   >>   "Laerdal.McuMgr.Bindings.Android/gradle.properties"
            
            echo

            echo    "--------------------------------------------------"

            cat    Laerdal.McuMgr.Bindings.Android/gradle.properties

            echo    "--------------------------------------------------"
            
            # this is vital in order to select the ios 16.1+

            ls  -ld  /Applications/Xcode*
            
            sudo   xcode-select   -s  /Applications/Xcode_14.2.app/Contents/Developer
            
            echo
            
            echo "** Java Version:"

            java               -version
            
            echo
            
            echo "** Javac Version:"

            javac             -version

            echo

            echo "** Gradle Version:"

            gradle           --version
            
            echo
            
            echo "** Sharpie Version:"

            sharpie         --version
            
            echo

            echo "** XcodeBuild Version:"

            xcodebuild   -version
            
            echo

            echo "** Mono:"

            which       mono

            mono        --version
            
            echo

            echo "** MSBuild:"

            which       msbuild

            msbuild   --version
            
            echo

            echo "** Dotnet CLI:"

            which    dotnet

            dotnet   --version
            
            echo

            echo "** mtouch:"

            /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch  --version

      - task: NuGetToolInstaller@1
        displayName: 'Use NuGet '
        inputs:
          checkLatest: true

      - script: mkdir '$(Build.ArtifactStagingDirectory)/Artifacts'
        displayName: 'Create Directory $(Build.ArtifactStagingDirectory)/Artifacts'

      - task: NuGetCommand@2
        displayName: NuGet Sources Add
        inputs:
          command: custom
          arguments: sources   Add   -Name     LocalNugets   -Source   "$(Build.ArtifactStagingDirectory)/Artifacts"

      - task: MSBuild@1
        displayName: MSBuild
        inputs:
          solution: Laerdal.McuMgr.Builder.targets
          msbuildArguments: '-p:Laerdal_Github_Username="$(Github.ComponentsTeam.Username)"   -p:Laerdal_Github_Access_Token="$(Github.ComponentsTeam.AccessToken)"   -p:Laerdal_Repository="$(Repository.Path)"     -p:Laerdal_Source_Branch="$(Build.SourceBranch)"    -p:PackageOutputPath="$(Build.ArtifactStagingDirectory)/Artifacts/"  '

      - task: Bash@3
        displayName: Print Nugets in 'Artifacts/'
        inputs:
          targetType: inline
          script: ls    -l   "$(Build.ArtifactStagingDirectory)/Artifacts/"
  
      # Publish test results to Azure Pipelines
      - task: PublishTestResults@2
        inputs:
          searchFolder: '$(System.DefaultWorkingDirectory)'
          testResultsFiles: 'Laerdal.McuMgr.Tests/Laerdal.McuMgr.Tests.xml'
          testResultsFormat: 'XUnit'

      # bare in mind that this task doesnt support wildcards
      - task: PublishBuildArtifacts@1
        inputs:
          ArtifactName: 'drop'
          PathtoPublish: $(Build.ArtifactStagingDirectory)/Artifacts/
          publishLocation: 'Container'
...
