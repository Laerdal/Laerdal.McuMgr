trigger:
  branches:
    include:
      - '*'

pool:
  name: 'Azure Pipelines'
  vmImage: 'macOS-12'

variables:
  - group: shared-variables  # needed for the github access token which is used to create new releases in github
  - name: 'Laerdal_Test_Results_Folderpath'
    value: '$(Build.Repository.LocalPath)/TestResults'

resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/develop

jobs:
  - job: Build
    displayName: 'Build Agent'
    condition: |
      or(
          eq(       variables['Build.Reason'],               'PullRequest'  ),
          ends(     variables['Build.SourceBranch'],         '/main'        ),
          ends(     variables['Build.SourceBranch'],         '/master'      ),
          ends(     variables['Build.SourceBranch'],         '/develop'     ),
          contains( variables['Build.SourceVersionMessage'], '[build]'      )
      )

    steps:
      - checkout: self
        clean: true
        fetchTags: false
        fetchDepth: 0
        persistCredentials: True

      - task: Bash@3
        displayName: 'Setup Build Environment for "Laerdal.McuMgr.Bindings"'
        inputs:
          targetType: filePath
          filePath: 'Laerdal.SetupBuildEnvironment.sh'

      - task: NuGetToolInstaller@1
        displayName: 'Install Nuget'
        inputs:
          checkLatest: true

      - script: 'mkdir "$(Build.ArtifactStagingDirectory)/Artifacts"'
        displayName: 'Create Directory "$(Build.ArtifactStagingDirectory)/Artifacts"'

      - task: NuGetCommand@2
        displayName: 'NuGet Sources Add (for Classic Xamarin)'
        inputs:
          command: 'custom'
          arguments: ' sources   Add   -Name     LocalNugets   -Source   "$(Build.ArtifactStagingDirectory)/Artifacts" '

      - task: DotNetCoreCLI@2
        displayName: 'NuGet Sources Add (for .Net6+)'
        inputs:
          command: 'custom'
          custom: 'nuget'
          arguments: ' add source "$(Build.ArtifactStagingDirectory)/Artifacts" '

      # notice that explicitly disabling parallelization via m:1 below is vital because if parallelization is enabled the ios and android
      # builds will fail with cryptic errors due to multiple target-frameworks are involved coupled with the custom build logic for native libs
      - task: DotNetCoreCLI@2
        displayName: 'Build .Net6+ Bindings and McuMgr itself and announce new release in GitHub (if needed)'
        inputs:
          command: 'custom'
          custom: 'msbuild'
          arguments: 'Laerdal.McuMgr.Builder.targets    -m:1   -p:Laerdal_Test_Results_Folderpath="$(Laerdal_Test_Results_Folderpath)"   -p:Laerdal_Github_Username="$(Github.ComponentsTeam.Username)"   -p:Laerdal_Github_Access_Token="$(Github.ComponentsTeam.AccessToken)"   -p:Laerdal_Repository="$(Repository.Path)"     -p:Laerdal_Source_Branch="$(Build.SourceBranch)"    -p:PackageOutputPath="$(Build.ArtifactStagingDirectory)/Artifacts/" '

      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testRunTitle: 'McuMgr Test Suite (Platform-Agnostic)'
          mergeTestResults: true
          testResultsFiles: '$(Laerdal_Test_Results_Folderpath)/**/*.trx'
          testResultsFormat: 'XUnit'
          failTaskOnFailedTests: true
          failTaskOnMissingResultsFile: true

      # bare in mind that this task doesnt support wildcards
      - task: PublishBuildArtifacts@1
        inputs:
          ArtifactName: 'drop'
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Artifacts/'
          publishLocation: 'Container'
