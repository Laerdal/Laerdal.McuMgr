<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="..\packages\xunit.runner.console.2.5.0\build\xunit.runner.console.props" Condition="Exists('..\packages\xunit.runner.console.2.5.0\build\xunit.runner.console.props')" />
    <Import Project="..\packages\xunit.core.2.5.0\build\xunit.core.props" Condition="Exists('..\packages\xunit.core.2.5.0\build\xunit.core.props')" />
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{2112FF63-2823-428B-80EE-0ECEE476BA46}</ProjectGuid>
        <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>Laerdal.McuMgr.Tests</RootNamespace>
        <AssemblyName>Laerdal.McuMgr.Tests</AssemblyName>
        <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>8</LangVersion>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="FluentAssertions, Version=6.11.0.0, Culture=neutral, PublicKeyToken=33f2691a05b67b6a, processorArchitecture=MSIL">
          <HintPath>..\packages\FluentAssertions.6.11.0\lib\net47\FluentAssertions.dll</HintPath>
        </Reference>
        <Reference Include="mscorlib" />
        <Reference Include="System" />
        <Reference Include="System.Configuration" />
        <Reference Include="System.Core" />
        <Reference Include="System.Data" />
        <Reference Include="System.Net.Http" />
        <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <HintPath>..\packages\System.Runtime.CompilerServices.Unsafe.6.0.0\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
        </Reference>
        <Reference Include="System.Threading.Tasks.Extensions, Version=4.2.0.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
          <HintPath>..\packages\System.Threading.Tasks.Extensions.4.5.4\lib\net461\System.Threading.Tasks.Extensions.dll</HintPath>
        </Reference>
        <Reference Include="System.Xml" />
        <Reference Include="System.Xml.Linq" />
        <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
          <HintPath>..\packages\xunit.abstractions.2.0.3\lib\net35\xunit.abstractions.dll</HintPath>
        </Reference>
        <Reference Include="xunit.assert, Version=2.5.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
          <HintPath>..\packages\xunit.assert.2.5.0\lib\netstandard1.1\xunit.assert.dll</HintPath>
        </Reference>
        <Reference Include="xunit.core, Version=2.5.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
          <HintPath>..\packages\xunit.extensibility.core.2.5.0\lib\net452\xunit.core.dll</HintPath>
        </Reference>
        <Reference Include="xunit.execution.desktop, Version=2.5.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
          <HintPath>..\packages\xunit.extensibility.execution.2.5.0\lib\net452\xunit.execution.desktop.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="DeviceResetter\DeviceResetterTestbed.cs" />
        <Compile Include="DeviceResetter\DeviceResetterTestbed.ResetAsync.ShouldThrowTimeoutException_GivenTooSmallTimeout.cs" />
        <Compile Include="DeviceResetter\DeviceResetterTestbed.ResetAsync.ShouldThrowDeviceResetterErroredOutException_GivenBluetoothErrorDuringReset.cs" />
        <Compile Include="DeviceResetter\DeviceResetterTestbed.ResetAsync.ShouldThrowDeviceResetterErroredOutException_GivenErroneousDueToMissingNativeSymbolsNativeDeviceResetterProxy.cs" />
        <Compile Include="DeviceResetter\DeviceResetterTestbed.ResetAsync.ShouldCompleteSuccessfully_GivenGreenNativeDeviceResetter.cs" />
        <Compile Include="DeviceResetter\DeviceResetterTestbed.DeviceResetterConstructor.ShouldThrowArgumentNullException_GivenNullNativeFileDownloader.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.MultipleFilesDownloadAsync.ShouldCompleteSuccessfully_GivenNoFilesToDownload.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.MultipleFilesDownloadAsync.ShouldCompleteSuccessfully_GivenVariousFilesToDownload.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.MultipleFilesDownloadAsync.ShouldThrowArgumentException_GivenPathCollectionWithErroneousFilesToDownload.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.MultipleFilesDownloadAsync.ShouldThrowNullArgumentException_GivenNullForFilesToDownload.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldCompleteSuccessfully_GivenGreenNativeFileDownloader.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowArgumentException_GivenEmptyRemoteFilePath.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.FileDownloaderConstructor.ShouldThrowArgumentNullException_GivenNullNativeFileDownloader.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.BeginDownload.ShouldThrowArgumentException_GivenInvalidRemoteFilePath.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowDownloadCancelledException_GivenCancellationRequestMidflight.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowDownloadErroredOutException_GivenFatalErrorMidflight.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowFirmwareErasureErroredOutException_GivenErroneousNativeFileDownloader.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowRemoteFileNotFoundException_GivenNonExistentFilepath.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowTimeoutException_GivenTooSmallTimeout.cs" />
        <Compile Include="FileDownloader\FileDownloaderTestbed.SingleFileDownloadAsync.ShouldThrowUploadErroredOutException_GivenRogueNativeErrorMessage.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.BeginDownload.ShouldThrowArgumentException_GivenInvalidRemoteFilePath.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.FileDownloaderConstructor.ShouldThrowArgumentNullException_GivenNullNativeFileDownloader.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.MultipleFilesDownloadAsync.ShouldCompleteSuccessfully_GivenNoFilesToDownload.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.MultipleFilesDownloadAsync.ShouldCompleteSuccessfully_GivenVariousFilesToDownload.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.MultipleFilesDownloadAsync.ShouldThrowArgumentException_GivenPathCollectionWithErroneousFilesToDownload.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.MultipleFilesDownloadAsync.ShouldThrowNullArgumentException_GivenNullForFilesToDownload.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldCompleteSuccessfully_GivenGreenNativeFileDownloader.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowArgumentException_GivenEmptyRemoteFilePath.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowDownloadCancelledException_GivenCancellationRequestMidflight.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowDownloadErroredOutException_GivenFatalErrorMidflight.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowFirmwareErasureErroredOutException_GivenErroneousNativeFileDownloader.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowRemoteFolderNotFoundException_GivenNonExistentFilepath.cs" />
        <Compile Include="FileUploader\FileUploaderTestbed.SingleFileDownloadAsync.ShouldThrowTimeoutException_GivenTooSmallTimeout.cs" />
        <Compile Include="FirmwareEraser\FirmwareEraserTestbed.cs" />
        <Compile Include="FirmwareEraser\FirmwareEraserTestbed.EraseAsync.ShouldThrowTimeoutException_GivenTooSmallTimeout.cs" />
        <Compile Include="FirmwareEraser\FirmwareEraserTestbed.EraseAsync.ShouldThrowFirmwareErasureErroredOutException_GivenErroneousNativeFirmwareEraser.cs" />
        <Compile Include="FirmwareEraser\FirmwareEraserTestbed.EraseAsync.ShouldCompleteSuccessfully_GivenGreenNativeFirmwareEraser.cs" />
        <Compile Include="FirmwareEraser\FirmwareEraserTestbed.FirmwareEraserConstructor.ShouldThrowArgumentNullException_GivenNullNativeFirmwareEraser.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\Laerdal.McuMgr\Laerdal.McuMgr.csproj">
        <Project>{4e2952a5-394e-4184-8e12-f2d5342a43b2}</Project>
        <Name>Laerdal.McuMgr</Name>
      </ProjectReference>
    </ItemGroup>
    <ItemGroup>
      <None Include="packages.config" />
    </ItemGroup>
    <ItemGroup>
      <Analyzer Include="..\packages\xunit.analyzers.1.2.0\analyzers\dotnet\cs\xunit.analyzers.dll" />
      <Analyzer Include="..\packages\xunit.analyzers.1.2.0\analyzers\dotnet\cs\xunit.analyzers.fixes.dll" />
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
      <PropertyGroup>
        <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105.The missing file is {0}.</ErrorText>
      </PropertyGroup>
      <Error Condition="!Exists('..\packages\xunit.core.2.5.0\build\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.5.0\build\xunit.core.props'))" />
      <Error Condition="!Exists('..\packages\xunit.core.2.5.0\build\xunit.core.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.5.0\build\xunit.core.targets'))" />
      <Error Condition="!Exists('..\packages\xunit.runner.console.2.5.0\build\xunit.runner.console.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.runner.console.2.5.0\build\xunit.runner.console.props'))" />
    </Target>
    <Import Project="..\packages\xunit.core.2.5.0\build\xunit.core.targets" Condition="Exists('..\packages\xunit.core.2.5.0\build\xunit.core.targets')" />
    
    <!-- in dotnet 4.8 this is the only way to go about invoking xunit to run tests    the alternative way of using the xunit dll is meant for dotnet core projects only -->
    <Target Name="Test" DependsOnTargets="Build">
        <ItemGroup>
            <TestAssemblies Include="**\$(OutputPath)\*.Tests.dll" />
        </ItemGroup>
        
        <Exec Command=" $(XunitConsole48Path) @(TestAssemblies) " />
    </Target>

    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->
</Project>
