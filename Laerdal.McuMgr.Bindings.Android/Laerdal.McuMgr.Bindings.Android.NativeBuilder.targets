<?xml version="1.0" encoding="utf-8"?>

<Project>

    <Target Name="SpicNSpan" AfterTargets="Clean">
        <!-- when performing a cleanup its vital to also clean any and all pre-existing .jar and .aar artifacts -->
        <!-- otherwise any new .jar/.aar files might not be fully updated to their respective latest versions   -->
        <RemoveDir Directories="Libraries" />
        
        <MakeDir Directories="Libraries" />
        <MakeDir Directories="Libraries/Dependencies" />
    </Target>
    
    <Target Name="CheckAndroidLibraryFilesExist" AfterTargets="CompileMcuMgrLaerdalWrapper">
        <Error Condition="!Exists('$(CoreAarLibrary)')" Text="'$(CoreAarLibrary)' does not exist"/>
    </Target>

    <Target Name="CompileMcuMgrLaerdalWrapper" BeforeTargets="PrepareForBuild" AfterTargets="TackleJarDependencies" Condition=" '$(DesignTimeBuild)' != 'true' AND '$(BuildingProject)' == 'true' ">
        <!-- on windows we need to make sure that the org.gradle.java.home property is set properly to java17 otherwise the build will fail -->
        <PropertyGroup>
			<!-- in azure we specify the gradlepath explicitly because by default macos13 uses gradle8.6          -->
			<!-- which has incompatibility problems versus gradle7.6 which is what we need for smooth compilation -->
			<GradlePath Condition=" '$(GradlePath)' == '' ">gradle</GradlePath>

            <!-- OSX and Linux     azure pipelines install java under /usr/local/opt/openjdk@17 or /opt/homebrew/opt/openjdk@17 by default -->
            <JavaHome Condition=" '$(IsUnix)' == 'true' AND '$(JavaHome)' == '' AND Exists('/usr/local/opt/openjdk@17')    ">/usr/local/opt/openjdk@17</JavaHome>
            <JavaHome Condition=" '$(IsUnix)' == 'true' AND '$(JavaHome)' == '' AND Exists('/opt/homebrew/opt/openjdk@17') ">/opt/homebrew/opt/openjdk@17</JavaHome>

            <!-- Windows -->
            <JavaHome Condition=" '$(IsWindows)' == 'true' AND '$(JavaHome)' == '' AND Exists('C:\Program Files\OpenJDK\jdk-17.0.2') ">C:\\Program Files\\OpenJDK\\jdk-17.0.2</JavaHome>

            <!-- last ditch effort -->
            <JavaHome Condition=" '$(JavaHome)' == '' AND Exists($(JAVA_HOME)) ">$(JAVA_HOME)</JavaHome>

            <McuMgrLaerdalWrapperLibSourceDirectory>../Laerdal.McuMgr.Bindings.Android.Native</McuMgrLaerdalWrapperLibSourceDirectory>
            <McuMgrLaerdalWrapperLibSourceDirectory>$([System.IO.Path]::GetFullPath($(McuMgrLaerdalWrapperLibSourceDirectory)))</McuMgrLaerdalWrapperLibSourceDirectory>

            <GradlePropertiesFilePath>$(McuMgrLaerdalWrapperLibSourceDirectory)/gradle.properties</GradlePropertiesFilePath>
        </PropertyGroup>

        <Error Condition=" '$(JavaHome)' == ''  " Text="** [ERROR] Failed to deduce the JavaHome for this platform!"/>
        <Error Condition=" !Exists($(JavaHome)) " Text="** [ERROR] Java17 not found in '$(JavaHome)' - make sure you have Java17 installed!"/>

        <!-- Read all lines from the input file -->
        <ReadLinesFromFile File="$(GradlePropertiesFilePath)">
            <Output TaskParameter="Lines" ItemName="FileLines"/>
        </ReadLinesFromFile>

        <ItemGroup>
            <FilteredLines Include="@(FileLines)" Condition="!$([System.Text.RegularExpressions.Regex]::IsMatch('%(Identity)', '^org\.gradle\.java\.home='))"/>
        </ItemGroup>

        <Exec Command="   chmod   +w   &quot;$(GradlePropertiesFilePath)&quot;   " Condition=" '$(IsUnix)' == 'true' "/>
        <WriteLinesToFile
                File="$(GradlePropertiesFilePath)"
                Lines="@(FilteredLines);org.gradle.java.home=$(JavaHome);"
                Overwrite="true"
        />

        <!--  https://stackoverflow.com/a/48155800/863651   its vital to create local.properties with the sdk.dir pointing to the android sdk home folder otherwise the build will fail -->
        <PropertyGroup>
            <AndroidSdkPath Condition=" '$(AndroidSdkPath)' == '' ">$(ANDROID_HOME)</AndroidSdkPath>
            <AndroidSdkPath Condition=" '$(AndroidSdkPath)' == '' AND '$(IsOSX)'     == 'true' ">/Users/$(USERNAME)/Library/Android/sdk</AndroidSdkPath>
            <AndroidSdkPath Condition=" '$(AndroidSdkPath)' == '' AND '$(IsLinux)'   == 'true' ">/home/$(USERNAME)/Android/Sdk</AndroidSdkPath>
            <AndroidSdkPath Condition=" '$(AndroidSdkPath)' == '' AND '$(IsWindows)' == 'true' ">C:\\Users\\$(USERNAME)\\AppData\\Local\\Android\\sdk</AndroidSdkPath>

            <McuMgrLaerdalWrapperAarFilePath>$(McuMgrLaerdalWrapperLibSourceDirectory)/mcumgr-laerdal-wrapper/build/outputs/aar/mcumgr-laerdal-wrapper-release.aar</McuMgrLaerdalWrapperAarFilePath>
        </PropertyGroup>

        <Error Condition=" '$(AndroidSdkPath)' == ''  " Text="** [ERROR] Failed to deduce the AndroidSdkPath for this platform!"/>
        <Error Condition=" !Exists($(AndroidSdkPath)) " Text="** [ERROR] Android SDK not found in '$(AndroidSdkPath)' - make sure you have the Android SDK installed!"/>
        <WriteLinesToFile File="$(McuMgrLaerdalWrapperLibSourceDirectory)/local.properties" Lines="sdk.dir=$(AndroidSdkPath)" Overwrite="true"/>

        <Delete Files="$(CoreAarLibrary)"/>

        <!-- this builds mcumgr-laerdal-wrapper-release.aar     to make life easier we set +x permission on gradlew right before invoking it -->
        <Exec WorkingDirectory="$(McuMgrLaerdalWrapperLibSourceDirectory)" Command="   $(GradlePath)     --version                                                                           "/>
        <Exec WorkingDirectory="$(McuMgrLaerdalWrapperLibSourceDirectory)" Command="   $(GradlePath)     wrapper    --distribution-type=BIN  --gradle-version=7.6                            "/>
        <Exec WorkingDirectory="$(McuMgrLaerdalWrapperLibSourceDirectory)" Command="   chmod   +x   ./gradlew                                                                                " Condition=" '$(IsUnix)' == 'true' "/>
        <Exec WorkingDirectory="$(McuMgrLaerdalWrapperLibSourceDirectory)" Command=" ./gradlew    wrapper    clean   assembleRelease   --console plain   --warning-mode all                  "/>

        <Copy SourceFiles="$(McuMgrLaerdalWrapperAarFilePath)" DestinationFiles="$(CoreAarLibrary)"/>
    </Target>

    <!-- android    download the jar and aar dependencies from maven                                                                                -->
    <Target Name="TackleJarDependencies" BeforeTargets="PrepareForBuild" Condition=" '$(DesignTimeBuild)' != 'true' AND '$(BuildingProject)' == 'true' ">

        <!-- 1. jars go here - notice the :jar postfix    to pick the right versions have a look at the folder Laerdal.McuMgr.Bindings.Android.Native/lib which contains all .jar files listed below -->

        <!-- we dont really need these anymore   they cause problems with duplicate symbols -->
        <!-- <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/collection.jar')                  " DestinationFileName="collection.jar                       " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://maven.google.com/androidx/collection/collection/1.1.0/collection-1.1.0.jar"/> -->
        <!-- <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/annotations.jar')                 " DestinationFileName="annotations.jar                      " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/org/jetbrains/annotations/23.0.0/annotations-23.0.0.jar"/> -->
        <!-- <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/kotlin-stdlib.jar')               " DestinationFileName="kotlin-stdlib.jar                    " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/org/jetbrains/kotlin/kotlin-stdlib/1.7.10/kotlin-stdlib-1.7.10.jar"/> -->

        <!-- these libraries are needed by the mcumgr stack even though they dont show up as dependencies inside the intellij ide -->
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/slf4j-api.jar')                        " DestinationFileName="slf4j-api.jar                        " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar"/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/jackson-core.jar')                     " DestinationFileName="jackson-core.jar                     " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.14.2/jackson-core-2.14.2.jar"/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/jackson-databind.jar')                 " DestinationFileName="jackson-databind.jar                 " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.14.2/jackson-databind-2.14.2.jar"/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/jackson-annotations.jar')              " DestinationFileName="jackson-annotations.jar              " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.14.2/jackson-annotations-2.14.2.jar"/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/jackson-dataformat-cbor.jar')          " DestinationFileName="jackson-dataformat-cbor.jar          " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.14.2/jackson-dataformat-cbor-2.14.2.jar"/>

        <!-- kotlinx coroutines are needed by .net6+ but we settle those through explicit nuget references over to xamarin.androix.koltin -->
        <!-- <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/kotlinx-coroutines-*.jar')        " DestinationFileName="kotlinx-coroutines-*.jar             " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/org/jetbrains/kotlinx/kotlinx-coroutines-rx2/1.7.3/kotlinx-coroutines-*-1.7.3.jar"/> -->

        <!-- 2. aars go here - notice the .aar postfix  -->

        <!-- download -->
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble-2.7.3.aar')           " DestinationFileName="nordicsemi-android-ble-2.7.3.aar                                         " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/no/nordicsemi/android/ble/2.7.3/ble-2.7.3.aar                      "/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble-1.9.2.aar')    " DestinationFileName="nordicsemi-android-mcumgr-ble-1.9.2.aar                                  " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/no/nordicsemi/android/mcumgr-ble/1.9.2/mcumgr-ble-1.9.2.aar        "/>
        <DownloadFile Condition=" !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core-1.9.2.aar')   " DestinationFileName="nordicsemi-android-mcumgr-core-1.9.2.aar                                 " DestinationFolder="$(AndroidLibsDependenciesFolder)" SourceUrl="https://repo1.maven.org/maven2/no/nordicsemi/android/mcumgr-core/1.9.2/mcumgr-core-1.9.2.aar      "/>

        <!-- unzip -->
        <Unzip Condition="        !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble-2.7.3.jar')           " DestinationFolder="$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble                    " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble-2.7.3.aar                                    "/>
        <Unzip Condition="        !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble-1.9.2.jar')    " DestinationFolder="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble             " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble-1.9.2.aar                             "/>
        <Unzip Condition="        !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core-1.9.2.jar')   " DestinationFolder="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core            " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core-1.9.2.aar                            "/>

        <!-- copy -->
        <Copy Condition="         !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble-2.7.3.jar')           " DestinationFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble-2.7.3.jar           " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-ble/classes.jar                                  "/>
        <Copy Condition="         !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble-1.9.2.jar')    " DestinationFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble-1.9.2.jar    " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-ble/classes.jar                           "/>
        <Copy Condition="         !Exists('$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core-1.9.2.jar')   " DestinationFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core-1.9.2.jar   " SourceFiles="$(AndroidLibsDependenciesFolder)/nordicsemi-android-mcumgr-core/classes.jar                          "/>
    </Target>

</Project>
