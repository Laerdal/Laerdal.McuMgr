<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <IsHostMachineOSX Condition="      '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))'     == 'true' ">true</IsHostMachineOSX>
        <IsHostMachineLinux Condition="    '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'   == 'true' ">true</IsHostMachineLinux>
        <IsHostMachineWindows Condition="  '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true' ">true</IsHostMachineWindows>
        <IsHostMachineUnix Condition="     '$(IsHostMachineOSX)' == 'true' OR '$(IsHostMachineLinux)' == 'true' ">true</IsHostMachineUnix>

        <LangVersion>10.0</LangVersion>
        
        <!-- to future maintainers     we stick with net8 for now in android because as it turned out the net8 toolchain generates broken      -->
        <!-- to future maintainers     android dlls that cause missing-symbols-errors in runtime   what a freakshow net8 turned out to be man  -->
        <!--                                                                                                                                   -->
        <!--                                             https://github.com/dotnet/maui/issues/21102                                           -->
        <!--                                                                                                                                   -->
        <TargetFramework>net8.0-android</TargetFramework>

        <IsNet8 Condition="               '$(TargetFramework.ToLower().StartsWith(net8))' == 'true'          ">true</IsNet8>
        <IsNetX Condition="               '$(IsNet8)' == 'true'                                              ">true</IsNetX>

        <!-- keep this sort of parameterization around because it will be very difficult to reintroduce it if we add more target-frameworks in the future -->
        <ShouldBuildNativeLibraries Condition=" '$(IsNetX)' == 'true' ">true</ShouldBuildNativeLibraries>

        <!-- net8 supports android13 and it corresponds to android-api level 34.0    notice that the ordering of the following evaluations is important! -->
        <TargetPlatformVersion Condition="      '$(IsNetX)' == 'true'   and   '$(Laerdal_Bindings_Android___DotnetTargetPlatformVersion)' != '' ">$(Laerdal_Bindings_Android___DotnetTargetPlatformVersion)</TargetPlatformVersion>
        <TargetPlatformVersion Condition="      '$(IsNetX)' == 'true'   and   '$(TargetPlatformVersion)' == ''                                  ">34</TargetPlatformVersion>
        <SupportedOSPlatformVersion Condition=" '$(IsNetX)' == 'true'                                                                           ">21</SupportedOSPlatformVersion>
        
        <DebugType>pdbonly</DebugType>
        <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
        <IsBindingProject>true</IsBindingProject>

        <NoWarn>$(NoWarn);CS0108;CS0114;BG8700;BG8605;BG8606;NETSDK1202;</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <AndroidLinkMode>Full</AndroidLinkMode>
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
    </PropertyGroup>

    <ItemGroup>
        <None Include="icon.png" Pack="true" PackagePath="\" Condition="Exists('icon.png')"/>
        <None Include="../LICENSE" Pack="true" PackagePath="\"/>
        <None Include="../README.md" Pack="true" PackagePath="\"/>
    </ItemGroup>

    <ItemGroup>
        <None Remove="Laerdal.McuMgr.Bindings.Android.csproj.DotSettings"/>
    </ItemGroup>

    <PropertyGroup>
        <PackageId>Laerdal.McuMgr.Bindings.Android</PackageId>
        <PackageTags>Laerdal;Nordic;McuMgr;Bindings;Android;Net8;</PackageTags>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr</PackageProjectUrl>
        <PackageReadmeFile Condition=" '$(IsNetX)' == 'true' ">README.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageDescription>Wrapper around Nordic's McuMgr-related native libs for Android - MAUI ready</PackageDescription>

        <PackageIcon Condition="Exists('icon.png')">icon.png</PackageIcon>
        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">../Artifacts</PackageOutputPath>

        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

        <!-- these versions are getting replaced by the build script in one swift pass -->
        <Version>1.0.1092.0</Version>
        <FileVersion>1.0.1092.0</FileVersion>
        <PackageVersion>1.0.1092.0</PackageVersion>
        <AssemblyVersion>1.0.1092.0</AssemblyVersion>

        <Title>$(PackageId)</Title>
        <Owners>$(Authors)</Owners>
        <Authors>Kyriakos Sidiropoulos, François Raminosona, Laerdal</Authors>
        <Summary>.Net8+ McuMgr Bindings for Android</Summary>
        <Copyright>$(Authors)</Copyright>
        <Description>$(PackageDescription)</Description>

        <RepositoryUrl>https://github.com/Laerdal/Laerdal.McuMgr.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <IncludeSource>true</IncludeSource>
        <IncludeSymbols>true</IncludeSymbols>
    </PropertyGroup>

    <PropertyGroup>
        <AndroidLibsFolder>Libraries</AndroidLibsFolder>
        <AndroidLibsDependenciesFolder>$(AndroidLibsFolder)/Dependencies</AndroidLibsDependenciesFolder>

        <CoreAarLibrary>$(AndroidLibsFolder)/mcumgr-laerdal-wrapper.aar</CoreAarLibrary>
    </PropertyGroup>

    <ItemGroup>
        <Folder Include="Libraries\"/>
        <Folder Include="Libraries\Dependencies\" />
        <Folder Include="Transforms\"/>
    </ItemGroup>

    <Target Name="PrintBuildInfo" BeforeTargets="PrepareForBuild">
        <Message Importance="High" Text="OS:               '$(OS)'               "/>
        <Message Importance="High" Text="Platform:         '$(Platform)'         "/>
        <Message Importance="High" Text="PackageId:        '$(PackageId)'        "/>
        <Message Importance="High" Text="Configuration:    '$(Configuration)'    "/>
        <Message Importance="High" Text="PackageVersion:   '$(PackageVersion)'   "/>
        <Message Importance="High" Text="TargetFramework:  '$(TargetFramework)'  "/>
        <Message Importance="High" Text="DefineConstants:  '$(DefineConstants)'  "/>
        <Message Importance="high" Text="DesignTimeBuild:  '$(DesignTimeBuild)'  "/>
        <Message Importance="high" Text="BuildingProject:  '$(BuildingProject)'  "/>
        <Message Importance="high" Text="MSBuildNodeCount: '$(MSBuildNodeCount)' "/>

        <Message Importance="high" Text="IsNet8:             '$(IsNet8)'             "/>
        <Message Importance="high" Text="IsNetX:             '$(IsNetX)'             "/>
        <Message Importance="high" Text="AndroidApplication: '$(AndroidApplication)' "/>

        <Message Importance="high" Text="TargetPlatformVersion:        '$(TargetPlatformVersion)'      "/>
        <Message Importance="high" Text="SupportedOSPlatformVersion:   '$(SupportedOSPlatformVersion)' "/>

        <Message Importance="high" Text="ShouldBuildNativeLibraries:   '$(ShouldBuildNativeLibraries)' "/>
    </Target>

    <!-- considering the highly customized nature of the build system we need to ensure that parallelization is turned off otherwise we will end up with   -->
    <!-- cryptic errors in azure due to target-frameworks trying to build themselves in parallel thus stepping onto eachothers toes    thats because the   -->
    <!-- intended way of building stuff is to let net8.0-android build the android libs and once that is done then and only then proceed to any additional -->
    <!-- target-frameworks which will find the .aar and .jars already in place                                                                             -->
    <Target Name="EnsureThatParallelizedBuildingIsDisabled"
            BeforeTargets="PrepareForBuild">
        <Error Condition=" '$(MSBuildNodeCount)' != '' AND $(MSBuildNodeCount) &gt; 1 "
               Text="Detected that parallelization is turned on (MSBuildNodeCount: $(MSBuildNodeCount) > 1). Refusing to build because parallelized builds are destined to fail with cryptic errors. Turn off parallelization via BuildInParallel=false or /m:1 (see: https://stackoverflow.com/a/76340699/863651)"/>
    </Target>

    <Import Condition=" '$(ShouldBuildNativeLibraries)' == 'true' " Project="Laerdal.McuMgr.Bindings.Android.NativeBuilder.targets"/>
    <Import Condition=" '$(IsNetX)'                     == 'true' " Project="Laerdal.McuMgr.Bindings.Android.NetX.targets"/>

    <ItemGroup Condition=" '$(IsNetX)' == 'true' " >
        <!-- these dependencies have been field-tested and are known to work at least as far back as Android 10.0 -->
        <PackageReference Include="Xamarin.AndroidX.Core" Version="1.12.0.4" PrivateAssets="All" />

        <!-- the mcumgr-file-uploading aspect KotlinX.Coroutines jars with version 1.7+ -->
        <!-- to work as intended otherwise we get missing symbols errors in runtime     -->
        <PackageReference Include="Xamarin.KotlinX.Coroutines.Android" Version="1.8.0.1" />
    </ItemGroup>

</Project>
