<Project Sdk="Microsoft.NET.Sdk">

    <!-- SHARED -->
    <PropertyGroup>
        <IsOSX Condition="      '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))'     == 'true' ">true</IsOSX>
        <IsLinux Condition="    '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'   == 'true' ">true</IsLinux>
        <IsWindows Condition="  '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true' ">true</IsWindows>
        <IsUnix Condition="     '$(IsOSX)' == 'true' OR '$(IsLinux)' == 'true' ">true</IsUnix>

        <!-- - note that we build against netstandard2.1 merely as a dud-placeholder for windows in which we are bound to get not-implemented exceptions all over the place -->
        <!-- - also note it only makes sense to build ios stuff under osx because xcodebuild is only available there -->
        <!-- - in azure we omit building maccatalyst for the time being because net8 needs maccatalyst 17.2+ which is only available on macos14 which microsoft currently (Q1 2024) doesn't provide us with in azure just yet -->

        <TargetFrameworks>$(TargetFrameworks)netstandard2.1;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net8.0-android;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'true'                                            ">$(TargetFrameworks)net8.0-ios11;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'true' and '$(Should_Skip_MacCatalyst)' != 'true' ">$(TargetFrameworks)net8.0-maccatalyst</TargetFrameworks>

        <IsNet8 Condition="            '$(TargetFramework.ToLower().StartsWith(net8))'                 == 'true' ">true</IsNet8>
        <IsNet8IOS Condition="         '$(TargetFramework.ToLower().StartsWith(net8.0-ios))'           == 'true' ">true</IsNet8IOS>
        <IsNet8Android Condition="     '$(TargetFramework.ToLower().StartsWith(net8.0-android))'       == 'true' ">true</IsNet8Android>
        <IsNetStandard Condition="     '$(TargetFramework.ToLower().StartsWith(netstandard))'          == 'true' ">true</IsNetStandard>
        <IsNet8MacCatalyst Condition=" '$(TargetFramework.ToLower().StartsWith(net8.0-maccatalyst))'   == 'true' ">true</IsNet8MacCatalyst>

        <IsNetX Condition="                '$(IsNet8)'             == 'true' ">true</IsNetX>
        <IsNetXIOS Condition="             '$(IsNet8IOS)'          == 'true' ">true</IsNetXIOS>
        <IsNetXAndroid Condition="         '$(IsNet8Android)'      == 'true' ">true</IsNetXAndroid>
        <IsNetXMacCatalyst Condition="     '$(IsNet8MacCatalyst)'  == 'true' ">true</IsNetXMacCatalyst>

        <IsIOS Condition="                 '$(IsNetXIOS)'          == 'true'                         ">true</IsIOS>
        <IsAndroid Condition="             '$(IsNetXAndroid)'      == 'true'                         ">true</IsAndroid>
        <IsAppleStuff Condition="          '$(IsNetXMacCatalyst)'  == 'true' OR '$(IsIOS)' == 'true' ">true</IsAppleStuff>
        
        <OutputType>Library</OutputType>
        <OutputPath>bin\</OutputPath>
        <LangVersion>9</LangVersion>
        <DebugSymbols>true</DebugSymbols>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>Laerdal.McuMgr</PackageId>
        <PackageTags>Laerdal;MAUI;Nordic;McuMgr;Tools;Firmware;</PackageTags>
        <PackageDescription>Managed wrapper around 'Laerdal.McuMgr.Bindings.*' for iOS, Android and NetStandard - MAUI ready</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr</PackageProjectUrl>

        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">../Artifacts</PackageOutputPath>
        <PackageIcon Condition="Exists('icon.png')">icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <!-- these versions are getting replaced by the build script in one swift pass -->
        <Version>1.0.1151.0</Version>
        <FileVersion>1.0.1151.0</FileVersion>
        <PackageVersion>1.0.1151.0</PackageVersion>
        <AssemblyVersion>1.0.1151.0</AssemblyVersion>

        <Title>$(PackageId)</Title>
        <Owners>$(Authors)</Owners>
        <Summary>McuMgr Managed-Wrapper Library</Summary>
        <Authors>François Raminosona, Kyriakos Sidiropoulos, Laerdal</Authors>
        <Copyright>$(Authors)</Copyright>
        <Description>$(PackageDescription)</Description>
        <RepositoryType>git</RepositoryType>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr.git</PackageProjectUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>

        <!-- WARN : SecureDFUServiceInitiator.g.cs: [CS0114] 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member        -->
        <!-- 'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. -->
        <!-- Otherwise add the new keyword. Can be ignored.                                                                                                  -->
        <NoWarn>$(NoWarn);CS0114;CS0618;CS0108;NETSDK1202;</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <None Include="icon.png" Pack="true" PackagePath="\" Condition="Exists('icon.png')"/>
        <None Include="../LICENSE" Pack="true" PackagePath="\"/>
        <None Include="../README.md" Pack="true" PackagePath="\"/>
        <None Remove="Laerdal.McuMgr.csproj.DotSettings"/>
    </ItemGroup>

    <Target Name="PrintBuildInfo" BeforeTargets="CoreCompile">
        <Message Importance="High" Text="OS:                         '$(OS)'                      "/>
        <Message Importance="High" Text="Platform:                   '$(Platform)'                "/>
        <Message Importance="High" Text="PackageId:                  '$(PackageId)'               "/>
        <Message Importance="High" Text="Configuration:              '$(Configuration)'           "/>
        <Message Importance="High" Text="PackageVersion:             '$(PackageVersion)'          "/>
        <Message Importance="High" Text="TargetFramework:            '$(TargetFramework)'         "/>
        <Message Importance="High" Text="DefineConstants:            '$(DefineConstants)'         "/>
        <Message Importance="high" Text="MSBuildNodeCount:           '$(MSBuildNodeCount)'        "/>
        <Message Importance="high" Text="Should_Skip_MacCatalyst:    '$(Should_Skip_MacCatalyst)' "/>

        <Message Importance="high" Text="IsNet8:           '$(IsNet8)'           "/>
        <Message Importance="high" Text="IsNetX:           '$(IsNetX)'           "/>

        <Message Importance="high" Text="IsNet8MacCatalyst: '$(IsNet8MacCatalyst)' "/>
        <Message Importance="high" Text="IsNetXAndroid:     '$(IsNetXAndroid)'     "/>
        <Message Importance="high" Text="IsNetXMacCatalyst: '$(IsNetXMacCatalyst)' "/>

        <Message Importance="high" Text="IsIOS:             '$(IsIOS)' "/>
        <Message Importance="high" Text="IsAndroid:         '$(IsAndroid)' "/>
        <Message Importance="high" Text="IsAppleStuff:      '$(IsAppleStuff)' "/>
    </Target>

    <!-- SHARED -->
    <ItemGroup>
        <Compile Include="Shared\**\*.cs"/>
        <Compile Include="Properties\AssemblyInfo.cs"/>
    </ItemGroup>

    <!-- ANDROID -->
    <PropertyGroup Condition=" '$(IsAndroid)' == 'true' ">
        <AndroidLinkMode>Full</AndroidLinkMode>
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
    </PropertyGroup>
    <ItemGroup Condition=" '$(IsAndroid)' == 'true' ">
        <Compile Include="Droid\*.cs"/>
        <Compile Include="Droid\**\*.cs"/>
    </ItemGroup>

    <!-- iOS/MacCatalyst -->
    <ItemGroup Condition=" '$(IsAppleStuff)' == 'true' ">
        <Compile Include="iOS\**\*.cs"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsNetStandard)' == 'true' ">
        <Compile Include="NetStandard\**\*.cs"/>
    </ItemGroup>
    
    <!-- NUGETS -->
    
    <!-- ANDROID -->
    <ItemGroup Condition=" '$(IsAndroid)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.Android" Version="1.0.1151.0"/>
    </ItemGroup>

    <!-- IOS/MacCatalyst -->
    <ItemGroup Condition=" '$(IsIOS)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.iOS" Version="1.0.1151.0"/>
    </ItemGroup>

    <ItemGroup Condition=" '$(IsNetXMacCatalyst)' == 'true' and '$(Should_Skip_MacCatalyst)' != 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.MacCatalyst" Version="1.0.1151.0"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsNetStandard)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.NetStandard" Version="1.0.1151.0"/>
    </ItemGroup>

</Project>
