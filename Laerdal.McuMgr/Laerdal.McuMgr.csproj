<Project Sdk="MSBuild.Sdk.Extras/3.0.44">

    <!-- SHARED -->
    <PropertyGroup>
        <IsOSX>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsOSX>
        <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
        <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
        <IsUnix Condition=" '$(IsOSX)' == 'True' OR '$(IsLinux)' == 'True' ">True</IsUnix>

        <!-- it only makes sense to build xamarin.ios under osx because xcodebuild is only available there -->
        <TargetFrameworks>monoandroid12.0;netstandard2.0;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)xamarin.ios10;</TargetFrameworks> 

        <OutputType>Library</OutputType>
        <OutputPath>bin\</OutputPath>
        <LangVersion>8.0</LangVersion>
        <DebugSymbols>true</DebugSymbols>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>Laerdal.McuMgr</PackageId>
        <PackageTags>Xamarin;McuMgr;Dfu;Ble</PackageTags>
        <PackageDescription>Xamarin managed wrapper around 'Laerdal.McuMgr.Bindings' for iOS and Android.</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr</PackageProjectUrl>
        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">../Artifacts</PackageOutputPath>
        <PackageIcon Condition="Exists('icon.png')">icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <!-- package dependencies are being intelligently added automatically to the nuspec so no need to be explicit about it here -->
        <!-- <PackageReference Include="Laerdal.McuMgr.Core" Version="1.1.0" /> -->

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <!-- these versions are getting replaced by the build script in one swift pass -->
        <Version>1.0.683.0</Version>
        <FileVersion>1.0.683.0</FileVersion>
        <PackageVersion>1.0.683.0</PackageVersion>
        <AssemblyVersion>1.0.683.0</AssemblyVersion>

        <Title>$(PackageId)</Title>
        <Summary>Xamarin McuMgr Bindings</Summary>
        <Description>$(PackageDescription)</Description>
        <Authors>François Raminosona, Kyriakos Sidiropoulos, Laerdal</Authors>
        <Owners>$(Authors)</Owners>
        <Copyright>$(Authors)</Copyright>
        <RepositoryUrl>https://github.com/Laerdal/Laerdal.McuMgr.git</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>
        <!-- WARN : SecureDFUServiceInitiator.g.cs: [CS0114] 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member 
        'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. 
        Otherwise add the new keyword.
        Can be ignored. -->
        <NoWarn>CS0114;CS0618;CS0108;</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <None Include="icon.png" Pack="true" PackagePath="\" Condition="Exists('icon.png')" />
        <None Include="../LICENSE" Pack="true" PackagePath="\" />
        <None Remove="Laerdal.McuMgr.csproj.DotSettings" />
    </ItemGroup>

    <!-- SHARED -->
    <ItemGroup>
        <Compile Include="Shared\**\*.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
        <Compile Update="Shared\DeviceResetter\Contracts\Native\INativeDeviceResetterCallbacksProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\DeviceResetter\Contracts\Native\INativeDeviceResetterCommandsProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\DeviceResetter\Contracts\Native\INativeDeviceResetterProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\DeviceResetter\Contracts\Enums\EDeviceResetterState.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileDownloader\Contracts\Enums\EFileDownloaderState.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileDownloader\Contracts\Enums\EFileDownloaderVerdict.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileDownloader\Contracts\Native\INativeFileDownloaderCallbacksProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileDownloader\Contracts\Native\INativeFileDownloaderCommandsProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileDownloader\Contracts\Native\INativeFileDownloaderProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileUploader\Contracts\Enums\EFileUploaderState.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileUploader\Contracts\Enums\EFileUploaderVerdict.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileUploader\Contracts\Native\INativeFileUploaderCallbacksProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileUploader\Contracts\Native\INativeFileUploaderCommandsProxy.cs">
          <SubType>Code</SubType>
        </Compile>
        <Compile Update="Shared\FileUploader\Contracts\Native\INativeFileUploaderProxy.cs">
          <SubType>Code</SubType>
        </Compile>
    </ItemGroup>

    <!-- ANDROID -->
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('monoandroid')) ">
        <Compile Include="Droid\*.cs" />
        <Compile Include="Droid\**\*.cs" />

        <Reference Include="Mono.Android" />

        <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.4.0" />
    </ItemGroup>

    <!-- iOS -->
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('xamarin.ios')) ">
        <Compile Include="iOS\**\*.cs" />
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('netstandard')) ">
        <Compile Include="NetStandard\**\*.cs" />
    </ItemGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
        <AndroidLinkMode>Full</AndroidLinkMode>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
        <AndroidLinkMode>Full</AndroidLinkMode>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Laerdal.McuMgr.Bindings" Version="1.0.683.0" />
    </ItemGroup>

</Project>
