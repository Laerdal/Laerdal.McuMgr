<Project Sdk="Xamarin.Legacy.Sdk/0.2.0-alpha4">

    <!-- SHARED -->
    <PropertyGroup>
        <IsOSX>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsOSX>
        <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
        <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
        <IsUnix Condition=" '$(IsOSX)' == 'True' OR '$(IsLinux)' == 'True' ">True</IsUnix>

        <!-- it only makes sense to build ios stuff under osx because xcodebuild is only available there -->
        <TargetFrameworks>$(TargetFrameworks)netstandard2.0;</TargetFrameworks>

        <!-- notice that on windows the monoandroid build is disabled because the android bindings fail to be generated -->
        <!-- due to a b.ug in Xamarin.Legacy.Sdk https://github.com/xamarin/Xamarin.Legacy.Sdk/issues/42                -->
        <TargetFrameworks Condition=" '$(IsWindows)' != 'true' ">$(TargetFrameworks)monoandroid12.0;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net6.0-android;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net7.0-android;</TargetFrameworks>

        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)xamarin.ios10;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net6.0-ios11;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net7.0-ios11;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net6.0-maccatalyst;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net7.0-maccatalyst;</TargetFrameworks>

        <IsNet6 Condition="            '$(TargetFramework.ToLower().StartsWith(net6))'                 == 'true' ">true</IsNet6>
        <IsNet7 Condition="            '$(TargetFramework.ToLower().StartsWith(net7))'                 == 'true' ">true</IsNet7>
        <IsNet6IOS Condition="         '$(TargetFramework.ToLower().StartsWith(net6.0-ios))'           == 'true' ">true</IsNet6IOS>
        <IsNet7IOS Condition="         '$(TargetFramework.ToLower().StartsWith(net7.0-ios))'           == 'true' ">true</IsNet7IOS>
        <IsNet6Android Condition="     '$(TargetFramework.ToLower().StartsWith(net6.0-android))'       == 'true' ">true</IsNet6Android>
        <IsNet7Android Condition="     '$(TargetFramework.ToLower().StartsWith(net7.0-android))'       == 'true' ">true</IsNet7Android>
        <IsNetStandard Condition="     '$(TargetFramework.ToLower().StartsWith(netstandard))'          == 'true' ">true</IsNetStandard>
        <IsXamarinIOS Condition="      '$(TargetFramework.ToLower().StartsWith(xamarin.ios))'          == 'true' ">true</IsXamarinIOS>
        <IsXamarinAndroid Condition="  '$(TargetFramework.ToLower().StartsWith(monoandroid))'          == 'true' ">true</IsXamarinAndroid>
        <IsNet6MacCatalyst Condition=" '$(TargetFramework.ToLower().StartsWith(net6.0-maccatalyst))'   == 'true' ">true</IsNet6MacCatalyst>
        <IsNet7MacCatalyst Condition=" '$(TargetFramework.ToLower().StartsWith(net7.0-maccatalyst))'   == 'true' ">true</IsNet7MacCatalyst>

        <IsNetX Condition="                '$(IsNet6)'             == 'true' OR '$(IsNet7)'             == 'true' ">true</IsNetX>
        <IsNetXIOS Condition="             '$(IsNet6IOS)'          == 'true' OR '$(IsNet7IOS)'          == 'true' ">true</IsNetXIOS>
        <IsNetXAndroid Condition="         '$(IsNet6Android)'      == 'true' OR '$(IsNet7Android)'      == 'true' ">true</IsNetXAndroid>
        <IsNetXMacCatalyst Condition="     '$(IsNet6MacCatalyst)'  == 'true' OR '$(IsNet7MacCatalyst)'  == 'true' ">true</IsNetXMacCatalyst>

        <IsIOS Condition="                 '$(IsXamarinIOS)'       == 'true' OR '$(IsNetXIOS)'          == 'true' ">true</IsIOS>
        <IsAndroid Condition="             '$(IsXamarinAndroid)'   == 'true' OR '$(IsNetXAndroid)'      == 'true' ">true</IsAndroid>
        <IsAppleStuff Condition="          '$(IsNetXMacCatalyst)'  == 'true' OR '$(IsIOS)'              == 'true' ">true</IsAppleStuff>
        
        <OutputType>Library</OutputType>
        <OutputPath>bin\</OutputPath>
        <LangVersion>9</LangVersion>
        <DebugSymbols>true</DebugSymbols>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>Laerdal.McuMgr</PackageId>
        <PackageTags>Xamarin;McuMgr;Dfu;Ble</PackageTags>
        <PackageDescription>Managed wrapper around 'Laerdal.McuMgr.Bindings.*' for iOS, Android and NetStandard - MAUI ready</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr</PackageProjectUrl>

        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">../Artifacts</PackageOutputPath>
        <PackageIcon Condition="Exists('icon.png')">icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <!-- these versions are getting replaced by the build script in one swift pass -->
        <Version>1.0.850.0</Version>
        <FileVersion>1.0.850.0</FileVersion>
        <PackageVersion>1.0.850.0</PackageVersion>
        <AssemblyVersion>1.0.850.0</AssemblyVersion>

        <Title>$(PackageId)</Title>
        <Owners>$(Authors)</Owners>
        <Summary>Xamarin McuMgr Managed-Wrapper Library</Summary>
        <Authors>François Raminosona, Kyriakos Sidiropoulos, Laerdal</Authors>
        <Copyright>$(Authors)</Copyright>
        <Description>$(PackageDescription)</Description>
        <RepositoryType>git</RepositoryType>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr.git</PackageProjectUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>

        <!-- WARN : SecureDFUServiceInitiator.g.cs: [CS0114] 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member        -->
        <!-- 'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. -->
        <!-- Otherwise add the new keyword. Can be ignored.                                                                                                  -->
        <NoWarn>CS0114;CS0618;CS0108;NETSDK1202;</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <None Include="icon.png" Pack="true" PackagePath="\" Condition="Exists('icon.png')"/>
        <None Include="../LICENSE" Pack="true" PackagePath="\"/>
        <None Include="../README.md" Pack="true" PackagePath="\"/>
        <None Remove="Laerdal.McuMgr.csproj.DotSettings"/>
    </ItemGroup>

    <Target Name="PrintBuildInfo" BeforeTargets="CoreCompile">
        <Message Importance="High" Text="OS:               '$(OS)'               "/>
        <Message Importance="High" Text="Platform:         '$(Platform)'         "/>
        <Message Importance="High" Text="PackageId:        '$(PackageId)'        "/>
        <Message Importance="High" Text="Configuration:    '$(Configuration)'    "/>
        <Message Importance="High" Text="PackageVersion:   '$(PackageVersion)'   "/>
        <Message Importance="High" Text="TargetFramework:  '$(TargetFramework)'  "/>
        <Message Importance="High" Text="DefineConstants:  '$(DefineConstants)'  "/>
        <Message Importance="high" Text="MSBuildNodeCount: '$(MSBuildNodeCount)' "/>

        <Message Importance="high" Text="IsNet6:           '$(IsNet6)'           "/>
        <Message Importance="high" Text="IsNet7:           '$(IsNet7)'           "/>
        <Message Importance="high" Text="IsNetX:           '$(IsNetX)'           "/>
        <Message Importance="high" Text="IsXamarinAndroid: '$(IsXamarinAndroid)' "/>

        <Message Importance="high" Text="IsNet6MacCatalyst: '$(IsNet6MacCatalyst)' "/>
        <Message Importance="high" Text="IsNet7MacCatalyst: '$(IsNet7MacCatalyst)' "/>
        <Message Importance="high" Text="IsNetXAndroid:     '$(IsNetXAndroid)'     "/>
        <Message Importance="high" Text="IsNetXMacCatalyst: '$(IsNetXMacCatalyst)' "/>

        <Message Importance="high" Text="IsIOS:             '$(IsIOS)' "/>
        <Message Importance="high" Text="IsAndroid:         '$(IsAndroid)' "/>
        <Message Importance="high" Text="IsAppleStuff:      '$(IsAppleStuff)' "/>
    </Target>

    <!-- SHARED -->
    <ItemGroup>
        <Compile Include="Shared\**\*.cs"/>
        <Compile Include="Properties\AssemblyInfo.cs"/>
    </ItemGroup>

    <!-- ANDROID -->
    <PropertyGroup Condition=" '$(IsAndroid)' == 'true' ">
        <AndroidLinkMode>Full</AndroidLinkMode>
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
    </PropertyGroup>
    <ItemGroup Condition=" '$(IsAndroid)' == 'true' ">
        <Compile Include="Droid\*.cs"/>
        <Compile Include="Droid\**\*.cs"/>
    </ItemGroup>

    <!-- iOS/MacCatalyst -->
    <ItemGroup Condition=" '$(IsAppleStuff)' == 'true' ">
        <Compile Include="iOS\**\*.cs"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsNetStandard)' == 'true' ">
        <Compile Include="NetStandard\**\*.cs"/>
    </ItemGroup>
    
    <!-- NUGETS -->
    
    <!-- ANDROID -->
    <ItemGroup Condition=" '$(IsAndroid)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.Android" Version="1.0.850.0"/>
    </ItemGroup>

    <!-- IOS/MacCatalyst -->
    <ItemGroup Condition=" '$(IsIOS)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.iOS" Version="1.0.850.0"/>
    </ItemGroup>

    <ItemGroup Condition=" '$(IsNetXMacCatalyst)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.MacCatalyst" Version="1.0.850.0"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsNetStandard)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.NetStandard" Version="1.0.850.0"/>
    </ItemGroup>

</Project>
