<Project Sdk="Xamarin.Legacy.Sdk/0.2.0-alpha4">

    <!-- SHARED -->
    <PropertyGroup>
        <IsOSX>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsOSX>
        <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
        <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
        <IsUnix Condition=" '$(IsOSX)' == 'True' OR '$(IsLinux)' == 'True' ">True</IsUnix>

        <!-- it only makes sense to build ios stuff under osx because xcodebuild is only available there -->
        <TargetFrameworks>$(TargetFrameworks)netstandard2.0;</TargetFrameworks>
        
        <TargetFrameworks>$(TargetFrameworks)monoandroid12.0;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net6.0-android;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net7.0-android;</TargetFrameworks>

        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)xamarin.ios10;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net6.0-ios11;</TargetFrameworks>
        <TargetFrameworks Condition=" '$(IsOSX)' == 'True' ">$(TargetFrameworks)net7.0-ios11;</TargetFrameworks>

        <IsCompilingForNet6 Condition="                  '$(TargetFramework.ToLower().StartsWith(net6.))'          == 'true' ">true</IsCompilingForNet6>
        <IsCompilingForNet7 Condition="                  '$(TargetFramework.ToLower().StartsWith(net7.))'          == 'true' ">true</IsCompilingForNet7>
        <IsCompilingForNet6IOS Condition="               '$(TargetFramework.ToLower().StartsWith(net6.0-ios))'     == 'true' ">true</IsCompilingForNet6IOS>
        <IsCompilingForNet7IOS Condition="               '$(TargetFramework.ToLower().StartsWith(net7.0-ios))'     == 'true' ">true</IsCompilingForNet7IOS>
        <IsCompilingForNet6Android Condition="           '$(TargetFramework.ToLower().StartsWith(net6.0-android))' == 'true' ">true</IsCompilingForNet6Android>
        <IsCompilingForNet7Android Condition="           '$(TargetFramework.ToLower().StartsWith(net7.0-android))' == 'true' ">true</IsCompilingForNet7Android>
        <IsCompilingForNetStandard Condition="           '$(TargetFramework.ToLower().StartsWith(netstandard))'    == 'true' ">true</IsCompilingForNetStandard>
        <IsCompilingForClassicXamarinIOS Condition="     '$(TargetFramework.ToLower().StartsWith(xamarin.ios))'    == 'true' ">true</IsCompilingForClassicXamarinIOS>
        <IsCompilingForClassicXamarinAndroid Condition=" '$(TargetFramework.ToLower().StartsWith(monoandroid))'    == 'true' ">true</IsCompilingForClassicXamarinAndroid>

        <IsCompilingForNetX Condition="                  '$(IsCompilingForNet6)'        == 'true' OR '$(IsCompilingForNet7)'        == 'true' ">true</IsCompilingForNetX>
        <IsCompilingForNetXIOS Condition="               '$(IsCompilingForNet6IOS)'     == 'true' OR '$(IsCompilingForNet7IOS)'     == 'true' ">true</IsCompilingForNetXIOS>
        <IsCompilingForNetXAndroid Condition="           '$(IsCompilingForNet6Android)' == 'true' OR '$(IsCompilingForNet7Android)' == 'true' ">true</IsCompilingForNetXAndroid>

        <IsCompilingForIOS Condition="     '$(IsCompilingForClassicXamarinIOS)'     == 'true' OR '$(IsCompilingForNet6IOS)'     == 'true' ">true</IsCompilingForIOS>
        <IsCompilingForAndroid Condition=" '$(IsCompilingForClassicXamarinAndroid)' == 'true' OR '$(IsCompilingForNetXAndroid)' == 'true' ">true</IsCompilingForAndroid>
        
        <OutputType>Library</OutputType>
        <OutputPath>bin\</OutputPath>
        <LangVersion>9</LangVersion>
        <DebugSymbols>true</DebugSymbols>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>Laerdal.McuMgr</PackageId>
        <PackageTags>Xamarin;McuMgr;Dfu;Ble</PackageTags>
        <PackageDescription>Xamarin managed wrapper around 'Laerdal.McuMgr.Bindings.*' for iOS, Android and NetStandard.</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/xamarin-nordic-mcumgr</PackageProjectUrl>

        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">../Artifacts</PackageOutputPath>
        <PackageIcon Condition="Exists('icon.png')">icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <!-- these versions are getting replaced by the build script in one swift pass -->
        <Version>1.0.781.0</Version>
        <FileVersion>1.0.781.0</FileVersion>
        <PackageVersion>1.0.781.0</PackageVersion>
        <AssemblyVersion>1.0.781.0</AssemblyVersion>

        <Title>$(PackageId)</Title>
        <Summary>Xamarin McuMgr Managed-Wrapper Library</Summary>
        <Description>$(PackageDescription)</Description>
        <Authors>François Raminosona, Kyriakos Sidiropoulos, Laerdal</Authors>
        <Owners>$(Authors)</Owners>
        <Copyright>$(Authors)</Copyright>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.McuMgr.git</PackageProjectUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>

        <!-- WARN : SecureDFUServiceInitiator.g.cs: [CS0114] 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member        -->
        <!-- 'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. -->
        <!-- Otherwise add the new keyword. Can be ignored.                                                                                                  -->
        <NoWarn>CS0114;CS0618;CS0108;NETSDK1202;</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <None Include="icon.png" Pack="true" PackagePath="\" Condition="Exists('icon.png')"/>
        <None Include="../LICENSE" Pack="true" PackagePath="\"/>
        <None Include="../README.md" Pack="true" PackagePath="\"/>
        <None Remove="Laerdal.McuMgr.csproj.DotSettings"/>
    </ItemGroup>

    <Target Name="PrintBuildInfo" BeforeTargets="CoreCompile">
        <Message Importance="High" Text="OS:               '$(OS)'               "/>
        <Message Importance="High" Text="Platform:         '$(Platform)'         "/>
        <Message Importance="High" Text="PackageId:        '$(PackageId)'        "/>
        <Message Importance="High" Text="Configuration:    '$(Configuration)'    "/>
        <Message Importance="High" Text="PackageVersion:   '$(PackageVersion)'   "/>
        <Message Importance="High" Text="TargetFramework:  '$(TargetFramework)'  "/>
        <Message Importance="High" Text="DefineConstants:  '$(DefineConstants)'  "/>
        <Message Importance="high" Text="MSBuildNodeCount: '$(MSBuildNodeCount)' "/>

        <Message Importance="high" Text="IsNet6:           '$(IsNet6)'           "/>
        <Message Importance="high" Text="IsNet7:           '$(IsNet7)'           "/>
        <Message Importance="high" Text="IsNetX:           '$(IsNetX)'           "/>
        <Message Importance="high" Text="IsXamarinAndroid: '$(IsXamarinAndroid)' "/>
    </Target>

    <!-- SHARED -->
    <ItemGroup>
        <Compile Include="Shared\**\*.cs"/>
        <Compile Include="Properties\AssemblyInfo.cs"/>
    </ItemGroup>

    <!-- ANDROID -->
    <ItemGroup Condition=" '$(IsCompilingForAndroid)' == 'true' ">
        <Compile Include="Droid\*.cs"/>
        <Compile Include="Droid\**\*.cs"/>

        <Reference Condition=" '$(IsCompilingForClassicXamarinAndroid)' == 'true' " Include="Mono.Android"/>
    </ItemGroup>

    <!-- iOS -->
    <ItemGroup Condition=" '$(IsCompilingForIOS)' == 'true' ">
        <Compile Include="iOS\**\*.cs"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsCompilingForNetStandard)' == 'true' ">
        <Compile Include="NetStandard\**\*.cs"/>
    </ItemGroup>

    <PropertyGroup Condition=" '$(IsCompilingForAndroid)' == 'true' ">
        <AndroidLinkMode>Full</AndroidLinkMode>
        <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
    </PropertyGroup>

    <!-- ANDROID -->
    <ItemGroup Condition=" '$(IsCompilingForAndroid)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.Android" Version="1.0.781.0"/>
    </ItemGroup>

    <!-- IOS -->
    <ItemGroup Condition=" '$(IsCompilingForIOS)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.iOS.NetX" Version="1.0.781.0"/>
    </ItemGroup>

    <!-- NETSTANDARD -->
    <ItemGroup Condition=" '$(IsCompilingForNetStandard)' == 'true' ">
        <PackageReference Include="Laerdal.McuMgr.Bindings.NetStandard" Version="1.0.781.0"/>
    </ItemGroup>

</Project>
